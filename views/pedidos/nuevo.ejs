<% title = 'Nuevo Pedido'; %>
<%- include('../partials/header') %>

<main class="container py-5">
  <h1 class="text-center mb-4">➕ Nuevo Pedido 📄</h1>

  <!-- Mensajes de éxito -->
  <% if (success.length) { %>
    <% success.forEach(msg => { %>
      <div class="alert alert-success text-center"><%= msg %></div>
    <% }) %>
  <% } %>

  <!-- Mensajes de error -->
  <% if (error.length) { %>
    <% error.forEach(msg => { %>
      <div class="alert alert-danger text-center"><%= msg %></div>
    <% }) %>
  <% } %>

  <form action="/pedidos/nuevo" method="POST" enctype="multipart/form-data" class="row g-4">

    <!-- 1) Cliente: autocompletar o crear nuevo -->
    <div class="col-12 position-relative">
      <label for="clienteInput" class="form-label">Cliente:</label>
      <div class="input-group">
        <input
          type="text"
          id="clienteInput"
          name="clienteInput"
          class="form-control"
          placeholder="Escribí el nombre…"
          autocomplete="off"
        >
        <button type="button" id="btnMostrarClientes" class="btn btn-outline-secondary" title="Mostrar clientes">🔍</button>
      </div>
      <input type="hidden" id="clienteExistente" name="clienteExistente">
      <div id="sugerencias" class="list-group position-absolute w-100"></div>
    </div>

    <!-- Campos para un cliente nuevo -->
    <div id="nuevoClienteFields" class="col-12" style="display:none;">
      <div class="row g-3">
        <div class="col-md-3">
          <label for="telefonoNuevo" class="form-label">Teléfono</label>
          <input type="text" id="telefonoNuevo" name="telefonoNuevo" class="form-control">
        </div>
        <div class="col-md-3">
          <label for="direccionNuevo" class="form-label">Dirección</label>
          <input type="text" id="direccionNuevo" name="direccionNuevo" class="form-control">
        </div>
        <div class="col-md-3">
          <label for="cuitNuevo" class="form-label">CUIT</label>
          <input type="text" id="cuitNuevo" name="cuitNuevo" class="form-control">
        </div>
        <div class="col-md-3">
          <label for="emailNuevo" class="form-label">Email</label>
          <input type="email" id="emailNuevo" name="emailNuevo" class="form-control">
        </div>
      </div>
    </div>

    <hr class="my-4"/>

    <!-- 2) Productos -->
    <h4 class="text-primary">Productos:</h4>
    <div id="productos"></div>
    <div class="col-12 text-center mb-4">
      <button type="button" class="btn btn-outline-success" onclick="agregarProducto()">➕ Agregar Producto</button>
    </div>

    <!-- 3) Totales -->
    <div class="col-md-6">
      <label class="form-label fw-bold">💵 Precio Total del Pedido</label>
      <input type="number" id="precioTotalPedido" name="precioTotalPedido"
             class="form-control" step="0.01" required>
    </div>

    <div class="col-md-6">
      <label class="form-label">Monto Señalado Total</label>
      <input type="number" name="monto_entregado" step="0.01" class="form-control" required>
    </div>

    <div class="col-md-6">
      <label class="form-label">Medio de Pago</label>
      <select name="medio_pago" class="form-select" required>
        <option value="Efectivo">Efectivo</option>
        <option value="Transferencia">Transferencia</option>
        <option value="Tarjeta">Tarjeta</option>
      </select>
    </div>

    <div class="col-12 text-center mt-4">
      <button type="submit" class="btn btn-danger px-5">💾 Guardar Pedido</button>
    </div>
  </form>

  <div class="text-center mt-4">
    <a href="/" class="btn btn-secondary">← Volver al Inicio</a>
  </div>
</main>

<%- include('../partials/footer') %>

<script>
  //────────────────────────────────────────────────────────────
  // Datos de materiales (inyectados desde el servidor)
  //────────────────────────────────────────────────────────────
  const materialesData = <%- JSON.stringify(materiales) %>;
  const totalInput     = document.getElementById('precioTotalPedido');
  let contadorProductos = 0;
  let manualTotal       = false;

  // Autocomplete Cliente (igual que antes)
  const inp  = document.getElementById('clienteInput');
  const hid  = document.getElementById('clienteExistente');
  const box  = document.getElementById('sugerencias');
  const btn  = document.getElementById('btnMostrarClientes');
  async function fetchClientes(q) {
    const res = await fetch(`/clientes/search?q=${encodeURIComponent(q)}`);
    const list = await res.json();
    box.innerHTML = list.map(c =>
      `<button type="button" class="list-group-item list-group-item-action`
      + ` data-id="${c.id}" data-name="${c.name}">${c.name}</button>`
    ).join('') +
    (q
      ? `<button type="button" class="list-group-item list-group-item-action text-primary`
        + ` data-new="true" data-name="${q}">➕ Nuevo: “${q}”</button>`
      : ''
    );
  }
  inp.addEventListener('input', () => {
    clearTimeout(inp._deb);
    inp._deb = setTimeout(() => {
      const q = inp.value.trim();
      if (!q) {
        box.innerHTML = '';
        toggleNuevo(true);
        return;
      }
      fetchClientes(q);
    }, 300);
  });
  btn.addEventListener('click', () => fetchClientes(inp.value.trim()));
  box.addEventListener('click', e => {
    if (!e.target.matches('.list-group-item')) return;
    const isNew = e.target.dataset.new;
    inp.value = e.target.dataset.name;
    hid.value = isNew ? '' : e.target.dataset.id;
    toggleNuevo(!!isNew);
    box.innerHTML = '';
  });
  function toggleNuevo(show) {
    document.getElementById('nuevoClienteFields').style.display = show ? 'block' : 'none';
  }
  toggleNuevo(true);

  // ───── Gestión de Productos ─────
  totalInput.addEventListener('input', () => { manualTotal = true; });

  function agregarProducto() {
    contadorProductos++;
    const cont = document.getElementById('productos');

    // Opciones de materiales
    const opciones = materialesData.map(m =>
      `<option
         value="${m.name}"
         data-price="${m.price}"
         data-tipounidad="${m.tipoUnidad}"
       >
         ${m.name} — $${m.price.toFixed(2)} / ${m.tipoUnidad==='m2'?'m²':'ud'}
       </option>`
    ).join('');

    const card = document.createElement('div');
    card.className = 'producto-card mb-4 p-3 border rounded';
    card.innerHTML = `
      <div class="row g-3 align-items-end">
        <div class="col-md-3">
          <label>Material:</label>
          <select name="material[]" class="form-select"
                  onchange="onMaterialChange(${contadorProductos}); calcularPrecio(${contadorProductos})"
                  required>
            <option value="">-- Elige material --</option>
            ${opciones}
          </select>
        </div>
        <div class="col-md-2">
          <label>Ancho (m):</label>
          <input type="number" name="ancho[]" class="form-control" step="0.01"
                 oninput="calcularPrecio(${contadorProductos})">
        </div>
        <div class="col-md-2">
          <label>Alto (m):</label>
          <input type="number" name="alto[]" class="form-control" step="0.01"
                 oninput="calcularPrecio(${contadorProductos})">
        </div>
        <div class="col-md-1">
          <label>Cant.:</label>
          <input type="number" name="cantidad[]" class="form-control" step="1" value="1"
                 oninput="calcularPrecio(${contadorProductos})" required>
        </div>
        <div class="col-md-2">
          <label>Descuento (%):</label>
          <input type="number" name="descuento[]" class="form-control" step="1" value="0"
                 oninput="calcularPrecio(${contadorProductos})">
        </div>
        <div class="col-md-2">
          <label>Precio:</label>
          <input type="number" name="precio[]" id="precio_${contadorProductos}"
                 class="form-control" step="0.01" readonly required>
        </div>
        <div class="col-12">
          <label>Descripción:</label>
          <textarea name="descripcion[]" class="form-control" rows="2" required></textarea>
        </div>
        <div class="col-12">
  <label>Imágenes (opcional):</label>
  <div class="dropzone border border-secondary rounded p-3 text-center"
       data-input="imagen_${contadorProductos}"
       ondragover="event.preventDefault()"
       ondrop="handleDrop(event, ${contadorProductos})">
    Arrastrá imágenes aquí o hacé clic para seleccionarlas
    <input type="file" name="imagen_${contadorProductos}" class="form-control mt-2 d-none"
           id="fileInput_${contadorProductos}" multiple onchange="showFiles(${contadorProductos})">
  </div>
  <div id="preview_${contadorProductos}" class="mt-2 d-flex flex-wrap gap-2"></div>
</div>
        <div class="col-12 text-end">
          <button type="button" class="btn btn-outline-danger btn-sm"
                  onclick="eliminarProducto(this)">🗑️ Eliminar Producto</button>
        </div>
      </div>`;
    cont.appendChild(card);

    document.getElementById(`precio_${contadorProductos}`).value = '0.00';
    calcularPrecio(contadorProductos);
  }

  function onMaterialChange(id) {
    document.getElementById(`precio_${id}`).readOnly = true;
    calcularPrecio(id);
  }

  function eliminarProducto(btn) {
    btn.closest('.producto-card').remove();
    recalcularTotalPedido();
  }

  function calcularPrecio(id) {
    const selEl = document.getElementsByName('material[]')[id-1];
    if (!selEl.value) return;

    // Leemos precio y unidad del <option>
    const pricePerUnit = parseFloat(selEl.selectedOptions[0].dataset.price) || 0;
    const unitType     = selEl.selectedOptions[0].dataset.tipounidad;

    const ancho    = parseFloat(document.getElementsByName('ancho[]')[id-1]?.value)    || 0;
    const alto     = parseFloat(document.getElementsByName('alto[]')[id-1]?.value)     || 0;
    const cantidad = parseInt  (document.getElementsByName('cantidad[]')[id-1]?.value) || 1;
    const desc     = parseFloat(document.getElementsByName('descuento[]')[id-1]?.value)|| 0;
    const inpPre   = document.getElementById(`precio_${id}`);

    // Cálculo: si es "unidad", precio directo; si no, por m² (ancho*alto*precio)
    let unitPrice;
    if (unitType === 'unidad') {
      unitPrice = pricePerUnit;
    } else {
      unitPrice = ancho * alto * pricePerUnit;
    }

    // Aplicamos cantidad y descuento
    let total = unitPrice * cantidad;
    total = total - (total * (desc / 100));

    inpPre.value = total.toFixed(2);
    recalcularTotalPedido();
  }

  function recalcularTotalPedido() {
    if (manualTotal) return;
    let sum = 0;
    document.querySelectorAll('input[name="precio[]"]').forEach(i => {
      sum += parseFloat(i.value) || 0;
    });
    totalInput.value = sum.toFixed(2);
  }

  // iniciar total
  totalInput.value = '0.00';

  function handleDrop(event, id) {
  event.preventDefault();
  const input = document.getElementById(`fileInput_${id}`);
  const dt = new DataTransfer();

  // Agregar las que ya estaban
  Array.from(input.files).forEach(f => dt.items.add(f));

  // Agregar nuevas arrastradas
  Array.from(event.dataTransfer.files).forEach(f => {
    if (f.type.startsWith('image/')) dt.items.add(f);
  });

  input.files = dt.files;
  showFiles(id);
}

function showFiles(id) {
  const input = document.getElementById(`fileInput_${id}`);
  const preview = document.getElementById(`preview_${id}`);
  preview.innerHTML = '';

  Array.from(input.files).forEach((file, index) => {
    if (!file.type.startsWith('image/')) return;
    const reader = new FileReader();
    reader.onload = e => {
      const wrapper = document.createElement('div');
      wrapper.className = 'position-relative d-inline-block';
      wrapper.innerHTML = `
        <img src="${e.target.result}" class="border rounded me-2" style="max-height: 80px;">
        <button type="button" class="btn btn-sm btn-danger position-absolute top-0 end-0 m-1"
                onclick="removeImage(${id}, ${index})">×</button>
      `;
      preview.appendChild(wrapper);
    };
    reader.readAsDataURL(file);
  });
}

function removeImage(id, indexToRemove) {
  const input = document.getElementById(`fileInput_${id}`);
  const dt = new DataTransfer();
  Array.from(input.files).forEach((file, index) => {
    if (index !== indexToRemove) dt.items.add(file);
  });
  input.files = dt.files;
  showFiles(id);
}

document.addEventListener('click', e => {
  const dz = e.target.closest('.dropzone');
  if (dz) {
    const inputName = dz.dataset.input;
    document.querySelector(`input[name="${inputName}"]`).click();
  }
});


</script>
